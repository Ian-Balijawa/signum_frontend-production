import Head from 'next/head';
import LandingPageContent from '@/containers/LandingPage';
import SiteBeingUpdated from '@/containers/SiteBeingUpdated';
// import { FetchFunctions } from '../utils';
import { allEndpoints } from '../constants';
import SEO from '@components/SEO';
import { sitePaths, BASE_URL } from '@/constants/sitepaths';
import {
  FetchFunctions,
  teamMemberEndpoints,
  practicesEndpoints,
  TEAM_MEMBER_ROLES,
} from '../beConstants';
export default function Home({ teamMembers, practices }) {
  const siteIsBeingUpdated = false;
  return (
    <>
      {/* <Head>
        <title>Signum Advocates</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head> */}
      <SEO
        title={`SIGNUM ADVOCATES | ${sitePaths.Home.name}`}
        description={sitePaths.Home.longDesc}
        websiteUrl={`${BASE_URL}${sitePaths.Home.path}`}
      />

      {siteIsBeingUpdated ? (
        <SiteBeingUpdated />
      ) : (
        <LandingPageContent teamMembers={teamMembers} practices={practices} />
      )}
    </>
  );
}

export async function getServerSideProps() {
  const [practicesData, teamMembersData] = await Promise.all([
    FetchFunctions.getData(`${practicesEndpoints.getAll}?limit=4&page=1`),
    FetchFunctions.getData(teamMemberEndpoints.getAll),
  ]);

  const practices = practicesData?.result || [];
  const teamMembers = teamMembersData?.data || [];

  return {
    props: {
      teamMembers: teamMembers?.sort?.((a, b) => a.feOrder - b.feOrder) || [],
      practices,
    },
  };
}
